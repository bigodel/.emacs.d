(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(abbrev-file-name "~/.emacs.d/abbrevs")
 '(abbrev-mode t t)
 '(amx-history-length 10)
 '(amx-save-file "/home/jpprime/.emacs.d/.cache/amx-items")
 '(auto-save-file-name-transforms (quote ((".*" "~/.emacs.d/.cache/auto-save/save-" t))))
 '(auto-save-list-file-prefix "~/.emacs.d/.cache/auto-save/saves-")
 '(backup-by-copying t)
 '(backup-directory-alist (quote ((".*" . "/home/jpprime/.emacs.d/.cache/backups/"))))
 '(bindings-space-map
   (quote
    (keymap
     (97 . func)
     (46 . dired-jump)
     (68 . dired)
     (85 . undo-tree-visualize)
     (53 keymap
         (111 . other-frame)
         (48 . delete-frame)
         (49 . delete-other-frames)
         (50 . make-frame-command)
         (46 . xref-find-definitions-other-frame)
         (100 . dired-other-frame)
         (15 . display-buffer-other-frame)
         (114 . find-file-read-only-other-frame)
         (6 . find-file-other-frame)
         (102 . find-file-other-frame)
         (98 . switch-to-buffer-other-frame)
         (109 . compose-mail-other-frame))
     (52 keymap
         (10 . dired-jump-other-window)
         (46 . xref-find-definitions-other-window)
         (100 . dired-other-window)
         (15 . display-buffer)
         (98 . switch-to-buffer-other-window)
         (6 . find-file-other-window)
         (114 . find-file-read-only-other-window)
         (102 . find-file-other-window)
         (48 . kill-buffer-and-window)
         (99 . clone-indirect-buffer-other-window)
         (97 . add-change-log-entry-other-window)
         (109 . compose-mail-other-window))
     (118 keymap
          (120 . vc-delete-file)
          (126 . vc-revision-other-window)
          (68 . vc-root-diff)
          (61 . vc-diff)
          (80 . vc-push)
          (43 . vc-update)
          (118 . vc-next-action)
          (117 . vc-revert)
          (115 . vc-create-tag)
          (114 . vc-retrieve-tag)
          (109 . vc-merge)
          (79 . vc-log-outgoing)
          (73 . vc-log-incoming)
          (76 . vc-print-root-log)
          (108 . vc-print-log)
          (105 . vc-register)
          (104 . vc-region-history)
          (71 . vc-ignore)
          (103 . vc-annotate)
          (100 . vc-dir)
          (98 . vc-switch-backend)
          (97 . vc-update-change-log))
     (39 . eshell/new-window)
     (117 . hydras/utils/body)
     (103 . hydras/magit/body)
     (105 . hydras/ivy/body)
     (70 . hydras/files/body)
     (115 . hydras/search/body)
     (106 . hydras/jumps/body)
     (116 . hydras/toggles/body)
     (104 keymap
          (117 . counsel-unicode-char)
          (113 . help-quit)
          (118 . helpful-variable)
          (119 . where-is)
          (116 . help-with-tutorial)
          (115 . describe-syntax)
          (114 . info-emacs-manual)
          (80 . describe-package)
          (112 . finder-by-keyword)
          (110 . view-emacs-news)
          (111 . describe-symbol)
          (109 . describe-mode)
          (108 . view-lossage)
          (107 . helpful-key)
          (52 keymap
              (105 . info-other-window))
          (105 . info)
          (104 . view-hello-file)
          (103 . describe-gnu-project)
          (102 . helpful-callable)
          (101 . view-echo-area-messages)
          (100 . apropos-documentation)
          (99 . describe-key-briefly)
          (98 . describe-bindings)
          (97 . apropos-command)
          (83 . counsel-info-lookup-symbol)
          (76 . describe-language-environment)
          (75 . Info-goto-emacs-key-command-node)
          (73 . describe-input-method)
          (70 . helpful-command)
          (67 . describe-coding-system)
          (28 . describe-input-method)
          (23 . describe-no-warranty)
          (20 . view-emacs-todo)
          (16 . view-emacs-problems)
          (15 . describe-distribution)
          (14 . view-emacs-news)
          (13 . view-order-manuals)
          (6 . view-emacs-FAQ)
          (5 . view-external-packages)
          (4 . view-emacs-debugging)
          (3 . describe-copying)
          (1 . about-emacs)
          (63 . help-for-help)
          (46 . display-local-help)
          (f1 . help-for-help)
          (help . help-for-help)
          (8 . help-for-help))
     (66 . buffer-menu)
     (2 . ibuffer)
     (73 . ibuffer)
     (98 . switch-to-buffer)
     (102 . find-file)
     (119 . save-buffer)
     (100 . dired)
     (32 . execute-extended-command))) t)
 '(bookmark-default-file "~/.emacs.d/.cache/bookmarks")
 '(buffer-file-coding-system (quote utf-8) t)
 '(comint-move-point-for-output t)
 '(comint-scroll-to-bottom-on-input (quote this))
 '(company-backends
   (quote
    ((company-files company-keywords company-capf :with company-yasnippet)
     (company-abbrev company-dabbrev company-ispell :with company-yasnippet)
     (company-dabbrev-code company-semantic company-gtags :with company-yasnippet)
     (company-eclim company-clang company-elisp company-css :with company-yasnippet)
     (company-xcode company-cmake :with company-yasnippet)
     (company-bbdb :with company-yasnippet))))
 '(company-echo-delay 0 t)
 '(company-global-modes (quote (not eshell-mode comint-mode)))
 '(company-idle-delay nil)
 '(company-minimum-prefix-length 2)
 '(company-require-match nil)
 '(company-selection-wrap-around t)
 '(company-tooltip-align-annotations t)
 '(company-tooltip-limit 12)
 '(compilation-always-kill t)
 '(compilation-ask-about-save nil)
 '(confirm-kill-emacs (quote y-or-n-p))
 '(coq-compile-before-require t t)
 '(create-lockfiles t)
 '(custom-safe-themes
   (quote
    ("6ebdb33507c7db94b28d7787f802f38ac8d2b8cd08506797b3af6cdfd80632e0" default)))
 '(delete-old-versions t)
 '(dired-use-ls-dired nil)
 '(display-line-numbers t)
 '(display-line-numbers-current-absolute t)
 '(doc-view-continuous t t)
 '(doc-view-resolution 200 t)
 '(dumb-jump-mode-selector (quote ivy) t)
 '(dumb-jump-prefer-searcher (quote rg))
 '(ediff-split-window-function (quote split-window-horizontally) t)
 '(ediff-window-setup-function (quote ediff-setup-windows-plain) t)
 '(enable-recursive-minibuffers t)
 '(eshell-buffer-maximum-lines 20000)
 '(eshell-buffer-shorthand t t)
 '(eshell-cmpl-ignore-case t t)
 '(eshell-directory-change-hook nil t)
 '(eshell-error-if-no-glob t t)
 '(eshell-glob-case-insensitive nil t)
 '(eshell-hist-ignoredups t t)
 '(eshell-history-size 10240 t)
 '(eshell-scroll-to-bottom-on-input (quote this))
 '(evil-emacs-state-cursor (quote ("red" box)) t)
 '(evil-insert-state-cursor (quote ("red" bar)) t)
 '(evil-magic (quote very-magic))
 '(evil-mode-line-format (quote (before . mode-line-front-space)))
 '(evil-motion-state-cursor (quote ("white" box)) t)
 '(evil-normal-state-cursor (quote ("magenta" box)) t)
 '(evil-operator-state-cursor (quote ("magenta" hollow)) t)
 '(evil-replace-state-cursor (quote ("red" hbar)) t)
 '(evil-search-module (quote isearch))
 '(evil-visual-state-cursor (quote ("orange" box)) t)
 '(evil-want-C-i-jump t)
 '(evil-want-C-u-scroll t)
 '(evil-want-abbrev-expand-on-insert-exit nil)
 '(evil-want-fine-undo nil)
 '(evil-want-keybinding nil)
 '(fill-column 80)
 '(gc-cons-threshold 67108864)
 '(global-mark-ring-max 128)
 '(history-length 1000)
 '(ibuffer-expert t)
 '(ibuffer-formats
   (quote
    ((mark modified read-only " "
           (name 18 18 :left :elide)
           " "
           (size-h 9 -1 :right)
           " "
           (mode 16 16 :left :elide)
           " " filename-and-process))))
 '(ibuffer-saved-filter-groups
   (quote
    (("Home"
      ("ERC"
       (mode . erc-mode))
      ("Gnus"
       (or
        (mode . message-mode)
        (mode . bbdb-mode)
        (mode . mail-mode)
        (mode . gnus-group-mode)
        (mode . gnus-summary-mode)
        (mode . gnus-article-mode)
        (name . "^\\.bbdb$")
        (name . "^\\.newsrc-dribble")))
      ("Planner"
       (or
        (name . "^\\*Calendar\\*$")
        (name . "^diary$")))
      ("Magit"
       (or
        (mode . magit-mode)
        (name . "^\\*magit.*\\*$")
        (name . "^magit.*:.*$")))
      ("Help"
       (or
        (name . "^\\*.*[hH]elp.*\\*$")
        (name . "^\\*info\\*$")
        (name . "^\\*Apropos\\*$")))
      ("Emacs config"
       (filename . ".emacs.d"))
      ("Emacs"
       (or
        (name . "^\\*scratch\\*$")
        (name . "^\\*Messages\\*$")
        (name . "^\\*Load Times\\*$")))
      ("Dired"
       (mode . dired-mode))))))
 '(ibuffer-show-empty-filter-groups nil)
 '(ibuffer-use-other-window t)
 '(indent-tabs-mode nil)
 '(inhibit-startup-echo-area-message t)
 '(inhibit-startup-screen t)
 '(initial-scratch-message nil)
 '(ivy-count-format "%d/%d ")
 '(ivy-height 16)
 '(ivy-initial-inputs-alist nil)
 '(ivy-use-virtual-buffers t)
 '(ivy-wrap t)
 '(kept-new-versions 20)
 '(kept-old-versions 0)
 '(locale-coding-system (quote utf-8) t)
 '(ls-lisp-use-insert-directory-program nil t)
 '(lv-use-separator t)
 '(magit-auto-revert-mode nil)
 '(magit-completing-read-function (quote ivy-completing-read))
 '(magit-diff-arguments (quote ("--histogram")) t)
 '(magit-merge-arguments (quote ("--no-ff")) t)
 '(magit-todos-fontify-org nil)
 '(magit-todos-mode t nil (magit-todos))
 '(magit-todos-scanner (quote magit-todos--scan-with-rg))
 '(mark-ring-max 64)
 '(mode-line-buffer-identification nil t)
 '(mouse-yank-at-point t)
 '(package-selected-packages
   (quote
    (restart-emacs gnu-elpa-keyring-update undo-tree yasnippet-snippets yaml-mode which-key vimrc-mode rich-minority proof-general pdf-tools page-break-lines ox-pandoc markdown-mode magit-todos ivy-yasnippet ivy-hydra ivy-bibtex helpful gitignore-mode gitconfig-mode gitattributes-mode evil-org evil-matchit esh-help dumb-jump crontab-mode counsel-tramp counsel-projectile company-coq auctex amx aggressive-indent)))
 '(pcomplete-ignore-case t)
 '(pdf-view-midnight-colors (quote ("#ffffff" . "#000000")) t)
 '(pdf-view-resize-factor 1.1 t)
 '(projectile-cache-file "~/.emacs.d/.cache/projectile.cache")
 '(projectile-completion-system (quote ivy))
 '(projectile-enable-caching t)
 '(projectile-indexing-method (quote alien))
 '(projectile-known-projects-file "~/.emacs.d/.cache/projectile-bookmarks.eld")
 '(projectile-project-compilation-cmd "" t)
 '(projectile-project-run-cmd "" t)
 '(proof-electric-terminator-enable t t)
 '(proof-script-fly-past-comments t t)
 '(proof-splash-enable nil t)
 '(proof-strict-read-only (quote retract) t)
 '(proof-three-window-mode-policy (quote smart) t)
 '(recentf-auto-cleanup 300)
 '(recentf-exclude
   (quote
    ("elpa" ".cache" "target" "dist" "node_modules" ".git" ".hg" ".svn" ".idea")))
 '(recentf-max-menu-items 500)
 '(recentf-max-saved-items 1000)
 '(recentf-save-file "~/.emacs.d/.cache/recentf")
 '(ring-bell-function (quote ignore))
 '(save-abbrevs (quote silently))
 '(save-interprogram-paste-before-kill nil)
 '(save-place-file "~/.emacs.d/.cache/places")
 '(savehist-additional-variables (quote (search ring regexp-search-ring)))
 '(savehist-file "~/.emacs.d/.cache/savehist")
 '(scroll-conservatively 2305843009213693951)
 '(scroll-margin 0)
 '(scroll-preserve-screen-position t)
 '(select-enable-clipboard t)
 '(sentence-end-double-space nil)
 '(server-auth-dir "~/.emacs.d/.cache/server")
 '(show-paren-delay 0)
 '(smerge-command-prefix "n")
 '(tab-width 4)
 '(track-eol t)
 '(tramp-persistency-file-name "~/.emacs.d/.cache/tramp")
 '(transient-history-file "~/.emacs.d/.cache/transient/history.el")
 '(transient-levels-file "~/.emacs.d/.cache/transient/levels.el")
 '(transient-values-file "~/.emacs.d/.cache/transient/values.el")
 '(truncate-lines nil)
 '(undo-tree-auto-save-history t)
 '(undo-tree-enable-undo-in-region nil)
 '(undo-tree-history-directory-alist (quote (("." . "~/.emacs.d/.cache/undo/"))))
 '(undo-tree-visualizer-diff t)
 '(undo-tree-visualizer-timestamps t)
 '(uniquify-after-kill-buffer-p t)
 '(uniquify-buffer-name-style (quote forward) nil (uniquify))
 '(uniquify-ignore-buffers-re "^\\*")
 '(uniquify-separator "/")
 '(user-full-name "João Pedro de Amorim Paula")
 '(user-mail-address "jpedrodeamorim@gmail.com")
 '(vc-follow-symlinks t)
 '(vc-make-backup-files t)
 '(version-control t)
 '(wdired-allow-to-change-permissions t t)
 '(wdired-allow-to-redirect-links t t)
 '(wdired-confirm-overwrite t t)
 '(wdired-use-interactive-rename t t)
 '(which-key-allow-evil-operators t)
 '(which-key-idle-delay 1.0)
 '(whitespace-style (quote (face trailing tabs tab-mark lines-tail)))
 '(yas-also-auto-indent-first-line t)
 '(yas-fallback-behaviour (quote return-nil) t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
